language: cpp

branches:
  except:
  - build-cfg

matrix:
  include:
    - os: linux
      dist: trusty
      env: >
           COMPILER=g++-4.8 TOOLSET=gcc-4.8 CPPSTD=11
           BOOST_VER=1.68.0
           TEST_CONFIGS=postgres
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-4.8
            - libstdc++-4.8-dev
            - unixodbc-dev
            - odbc-postgresql

    - os: linux
      dist: trusty
      env: >
           COMPILER=g++-6 TOOLSET=gcc-6 CPPSTD=14
           BOOST_VER=1.68.0
           TEST_CONFIGS=postgres
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-6
            - libstdc++-6-dev
            - unixodbc-dev
            - odbc-postgresql

    - os: linux
      dist: trusty
      env: >
           COMPILER=g++-7 TOOLSET=gcc-7 CPPSTD=14
           BOOST_VER=1.68.0
           TEST_CONFIGS=postgres
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-7
            - libstdc++-7-dev
            - unixodbc-dev
            - odbc-postgresql
    - os: linux
      dist: bionic
      env: >
           COMPILER=g++-10 TOOLSET=gcc-10 CPPSTD=latest
           BOOST_VER=1.75.0
           TEST_CONFIGS=postgres
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
          packages:
            - g++-10
            - libstdc++-10-dev
            - unixodbc-dev
            - odbc-postgresql

    - os: linux
      dist: precise
      env: >
           COMPILER=clang++-3.6 TOOLSET=clang CPPSTD=11
           BOOST_VER=1.68.0
           TEST_CONFIGS=postgres
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-precise-3.6
          packages:
            - clang-3.6
            - unixodbc-dev
            - odbc-postgresql

    - os: linux
      dist: trusty
      env: >
           COMPILER=clang++-6.0 TOOLSET=clang CPPSTD=1y
           BOOST_VER=1.70.0
           TEST_CONFIGS=postgres
           COVERAGE=ON
      addons:
        apt:
          update: true
          sources:
            - ubuntu-toolchain-r-test
            - llvm-toolchain-trusty-6.0
          packages:
            - clang-6.0
            - llvm-6.0
            - odbc-postgresql
    # - os: linux
    #   dist: bionic
    #   env: >
    #        COMPILER=clang++-12 TOOLSET=clang CPPSTD=2a
    #        BOOST_VER=1.75.0
    #        TEST_CONFIGS=postgres
    #        COVERAGE=ON
    #   addons:
    #     apt:
    #       update: true
    #       sources:
    #         - ubuntu-toolchain-r-test
    #         - sourceline: 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-12 main'
    #           key_url: 'https://apt.llvm.org/llvm-snapshot.gpg.key'
    #       packages:
    #         - clang-12
    #         - libc++-12-dev
    #         - libc++abi-12-dev
    #         - unixodbc-dev
    #         - odbc-postgresql
services:
  - postgresql
  - mysql
env:
  global:
    CODECOV_TOKEN="4cd5b25e-4ca1-4bf0-ac42-92924658728a"

install:
  ############################################################################
  # Install MySQL ODBC 8.0 Driver
  ############################################################################
  - |
    curl -L https://dev.mysql.com/get/Downloads/Connector-ODBC/5.0/mysql-connector-odbc-5.3.13-linux-ubuntu14.04-x86-64bit.tar.gz --retry 5 --retry-delay 2 | tar -xz
    mysql-connector-odbc-5.3.13-linux-ubuntu14.04-x86-64bit/bin/myodbc-installer -a -d -n "MySQL ODBC 5.3 ANSI Driver" -t "DRIVER=$(pwd)/mysql-connector-odbc-5.3.13-linux-ubuntu14.04-x86-64bit/lib/libmyodbc5a.so"
    odbcinst -j && cat /etc/odbcinst.ini
  - |
    if [[ "${COMPILER}" != "" ]]; then export CXX=${COMPILER}; fi
    cd ${TRAVIS_BUILD_DIR}
  ############################################################################
  # Install libc++ and libc++abi if needed
  ############################################################################
  - |
    if [[ "${CXX%%+*}" == "clang" ]]; then
      bash <( curl -s https://raw.githubusercontent.com/serge-klim/cihelpers/master/travis/lib++.install)
      [ $? -ne 0 ] && exit 1
      export B2FLAGS="${B2FLAGS} cxxflags=-isystem${TRAVIS_BUILD_DIR}/llvm/out/include/c++/v1 linkflags=-L${TRAVIS_BUILD_DIR}/llvm/out/lib"
      export LD_LIBRARY_PATH="${LD_LIBRARY_PATH}:${TRAVIS_BUILD_DIR}/llvm/out/lib"
    fi
  ############################################################################
  # Download boost and build boost tests
  ############################################################################
  - |
    cd ${TRAVIS_BUILD_DIR}
    curl --retry 5 -s https://raw.githubusercontent.com/serge-klim/cihelpers/master/user-cfg.jam > user-cfg.jam
    bash <( curl -s https://raw.githubusercontent.com/serge-klim/cihelpers/master/travis/boost.install) toolset=${TOOLSET} cxxstd=${CPPSTD} ${B2FLAGS} address-model=64 threading=multi --user-config=${TRAVIS_BUILD_DIR}/user-cfg.jam --layout=versioned --with-test --with-program_options --with-system --with-filesystem -d0 stage debug
    export BOOST_ROOT=${TRAVIS_BUILD_DIR}/boost_${BOOST_VER//./_}
before_script:
  - psql -h localhost -U postgres -c "CREATE DATABASE test;"
  # - |
  #   mysql -e "CREATE DATABASE IF NOT EXISTS test;"
  #   mysql -e "USE mysql;\nUPDATE user SET password=PASSWORD('Password12!') WHERE user='root';\nFLUSH PRIVILEGES;\n"
  - |
    if [[ "${COVERAGE}" == "ON" ]]; then
      export B2FLAGS="${B2FLAGS} cxxflags=\"-fprofile-instr-generate\" cxxflags=\"-fcoverage-mapping\" linkflags=\"-fprofile-instr-generate\""
    fi
  - cd ${TRAVIS_BUILD_DIR}
script:
  - ${BOOST_ROOT}/b2 toolset=${TOOLSET} cxxstd=${CPPSTD} ${B2FLAGS} address-model=64 threading=multi --user-config=${TRAVIS_BUILD_DIR}/user-cfg.jam -a --layout=versioned -sBOOST_ROOT=${BOOST_ROOT} -sBOOST_BUILD_PATH=${BOOST_ROOT} -sBOOST_VER=x64-${BOOST_VER%.*} -sBOOST_LIBS=${BOOST_ROOT}/stage/lib debug
after_success:
  - |
    if [[ "${COVERAGE}" == "ON" ]]; then
      llvm-profdata-6.0 merge -sparse default.profraw -o bobl.profdata
      llvm-cov-6.0 show $(find tests/bin -name test) -instr-profile=bobl.profdata > coverage.txt
      bash <(curl -s https://codecov.io/bash)
    fi
